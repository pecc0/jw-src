package com.jw.domain;
// Generated Oct 14, 2010 11:31:18 PM by Hibernate Tools 3.2.4.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Player generated by hbm2java
 */
@Entity
@Table(name="player"
)
public class Player  implements java.io.Serializable {


     private int id;
     private Player playerByFkGroup;
     private Player playerByFkFather;
     private Player playerByFkMother;
     private float health;
     private float happiness;
     private float energy;
     private float money;
     private int experience;
     private int tile;
     private boolean isGroup;
     private String name;
     private Set playersForFkGroup = new HashSet(0);
     private Set tasks = new HashSet(0);
     private Set contracts = new HashSet(0);
     private Set buildings = new HashSet(0);
     private Set contractConclusions = new HashSet(0);
     private Set playersForFkMother = new HashSet(0);
     private Set buildingUserses = new HashSet(0);
     private Set recipes = new HashSet(0);
     private Set playersForFkFather = new HashSet(0);
     private Set warsForFkDeclarator = new HashSet(0);
     private Set objectsForFkOwner = new HashSet(0);
     private Set warsForFkAttacked = new HashSet(0);
     private Set objectsForFkUser = new HashSet(0);
     private Set passangerses = new HashSet(0);

    public Player() {
    }

	
    public Player(int id, float health, float happiness, float energy, float money, int experience, int tile, boolean isGroup, String name) {
        this.id = id;
        this.health = health;
        this.happiness = happiness;
        this.energy = energy;
        this.money = money;
        this.experience = experience;
        this.tile = tile;
        this.isGroup = isGroup;
        this.name = name;
    }
    public Player(int id, Player playerByFkGroup, Player playerByFkFather, Player playerByFkMother, float health, float happiness, float energy, float money, int experience, int tile, boolean isGroup, String name, Set playersForFkGroup, Set tasks, Set contracts, Set buildings, Set contractConclusions, Set playersForFkMother, Set buildingUserses, Set recipes, Set playersForFkFather, Set warsForFkDeclarator, Set objectsForFkOwner, Set warsForFkAttacked, Set objectsForFkUser, Set passangerses) {
       this.id = id;
       this.playerByFkGroup = playerByFkGroup;
       this.playerByFkFather = playerByFkFather;
       this.playerByFkMother = playerByFkMother;
       this.health = health;
       this.happiness = happiness;
       this.energy = energy;
       this.money = money;
       this.experience = experience;
       this.tile = tile;
       this.isGroup = isGroup;
       this.name = name;
       this.playersForFkGroup = playersForFkGroup;
       this.tasks = tasks;
       this.contracts = contracts;
       this.buildings = buildings;
       this.contractConclusions = contractConclusions;
       this.playersForFkMother = playersForFkMother;
       this.buildingUserses = buildingUserses;
       this.recipes = recipes;
       this.playersForFkFather = playersForFkFather;
       this.warsForFkDeclarator = warsForFkDeclarator;
       this.objectsForFkOwner = objectsForFkOwner;
       this.warsForFkAttacked = warsForFkAttacked;
       this.objectsForFkUser = objectsForFkUser;
       this.passangerses = passangerses;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fk_group")
    public Player getPlayerByFkGroup() {
        return this.playerByFkGroup;
    }
    
    public void setPlayerByFkGroup(Player playerByFkGroup) {
        this.playerByFkGroup = playerByFkGroup;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fk_father")
    public Player getPlayerByFkFather() {
        return this.playerByFkFather;
    }
    
    public void setPlayerByFkFather(Player playerByFkFather) {
        this.playerByFkFather = playerByFkFather;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fk_mother")
    public Player getPlayerByFkMother() {
        return this.playerByFkMother;
    }
    
    public void setPlayerByFkMother(Player playerByFkMother) {
        this.playerByFkMother = playerByFkMother;
    }

    
    @Column(name="health", nullable=false, precision=8, scale=8)
    public float getHealth() {
        return this.health;
    }
    
    public void setHealth(float health) {
        this.health = health;
    }

    
    @Column(name="happiness", nullable=false, precision=8, scale=8)
    public float getHappiness() {
        return this.happiness;
    }
    
    public void setHappiness(float happiness) {
        this.happiness = happiness;
    }

    
    @Column(name="energy", nullable=false, precision=8, scale=8)
    public float getEnergy() {
        return this.energy;
    }
    
    public void setEnergy(float energy) {
        this.energy = energy;
    }

    
    @Column(name="money", nullable=false, precision=8, scale=8)
    public float getMoney() {
        return this.money;
    }
    
    public void setMoney(float money) {
        this.money = money;
    }

    
    @Column(name="experience", nullable=false)
    public int getExperience() {
        return this.experience;
    }
    
    public void setExperience(int experience) {
        this.experience = experience;
    }

    
    @Column(name="tile", nullable=false)
    public int getTile() {
        return this.tile;
    }
    
    public void setTile(int tile) {
        this.tile = tile;
    }

    
    @Column(name="is_group", nullable=false)
    public boolean isIsGroup() {
        return this.isGroup;
    }
    
    public void setIsGroup(boolean isGroup) {
        this.isGroup = isGroup;
    }

    
    @Column(name="name", nullable=false, length=32)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="playerByFkGroup")
    public Set getPlayersForFkGroup() {
        return this.playersForFkGroup;
    }
    
    public void setPlayersForFkGroup(Set playersForFkGroup) {
        this.playersForFkGroup = playersForFkGroup;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="player")
    public Set getTasks() {
        return this.tasks;
    }
    
    public void setTasks(Set tasks) {
        this.tasks = tasks;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="player")
    public Set getContracts() {
        return this.contracts;
    }
    
    public void setContracts(Set contracts) {
        this.contracts = contracts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="player")
    public Set getBuildings() {
        return this.buildings;
    }
    
    public void setBuildings(Set buildings) {
        this.buildings = buildings;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="player")
    public Set getContractConclusions() {
        return this.contractConclusions;
    }
    
    public void setContractConclusions(Set contractConclusions) {
        this.contractConclusions = contractConclusions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="playerByFkMother")
    public Set getPlayersForFkMother() {
        return this.playersForFkMother;
    }
    
    public void setPlayersForFkMother(Set playersForFkMother) {
        this.playersForFkMother = playersForFkMother;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="player")
    public Set getBuildingUserses() {
        return this.buildingUserses;
    }
    
    public void setBuildingUserses(Set buildingUserses) {
        this.buildingUserses = buildingUserses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="player")
    public Set getRecipes() {
        return this.recipes;
    }
    
    public void setRecipes(Set recipes) {
        this.recipes = recipes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="playerByFkFather")
    public Set getPlayersForFkFather() {
        return this.playersForFkFather;
    }
    
    public void setPlayersForFkFather(Set playersForFkFather) {
        this.playersForFkFather = playersForFkFather;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="playerByFkDeclarator")
    public Set getWarsForFkDeclarator() {
        return this.warsForFkDeclarator;
    }
    
    public void setWarsForFkDeclarator(Set warsForFkDeclarator) {
        this.warsForFkDeclarator = warsForFkDeclarator;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="playerByFkOwner")
    public Set getObjectsForFkOwner() {
        return this.objectsForFkOwner;
    }
    
    public void setObjectsForFkOwner(Set objectsForFkOwner) {
        this.objectsForFkOwner = objectsForFkOwner;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="playerByFkAttacked")
    public Set getWarsForFkAttacked() {
        return this.warsForFkAttacked;
    }
    
    public void setWarsForFkAttacked(Set warsForFkAttacked) {
        this.warsForFkAttacked = warsForFkAttacked;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="playerByFkUser")
    public Set getObjectsForFkUser() {
        return this.objectsForFkUser;
    }
    
    public void setObjectsForFkUser(Set objectsForFkUser) {
        this.objectsForFkUser = objectsForFkUser;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="player")
    public Set getPassangerses() {
        return this.passangerses;
    }
    
    public void setPassangerses(Set passangerses) {
        this.passangerses = passangerses;
    }




}


